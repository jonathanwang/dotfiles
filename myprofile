#!/bin/bash

# Include guard
if [ -z "$DOTFILES" ]; then
    export DOTFILES=yes
else
    return 0
fi

# Operating system specific settings
if [[ "$OSTYPE" == "linux-gnu" ]]; then
    # Linux

    # Enable color support of ls
    if [ -x /usr/bin/dircolors ]; then
        test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
        alias ls='ls --color=auto'
    fi

elif [[ "$OSTYPE" == "darwin"* ]]; then
    # Mac OS X
 
    # Enable color support of ls
    export CLICOLOR=1
    export LSCOLORS=ExGxBxDxCxEgEdxbxgxcxd
    #export LSCOLORS=GxFxCxDxBxegedabagaced

else
    echo "Unrecognized operating system"
fi

# Settings that depend on whether or not the session is over SSH
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    # Using SSH

    # Bash prompt with hostname
    export PS1='\[\033[0;0m\]\u@\h\[\033[00m\]:\[\033[0;36m\]\w\[\033[00m\]$ '
else
    # Not using SSH

    # Bash prompt without hostname
    export PS1='\[\033[0;0m\]\u\[\033[00m\]:\[\033[0;36m\]\w\[\033[00m\]$ '
fi

# bash git prompt: https://github.com/magicmonty/bash-git-prompt
#
# This prompt is also used even when not in the git repository to get the last command indicator.
# To use the promt only in repositories, uncomment the line below.
# GIT_PROMPT_ONLY_IN_REPO=1
# Set the beginning of the git prompt to the last command indicator and a color reset plus the current PS1 except with
# the extra '$ ' trimmed from the end so that it can be reinserted at the end.
GIT_PROMPT_START="_LAST_COMMAND_INDICATOR_\[\033[0m\] $(echo ${PS1%??})"
# No leading space in front of the status component.
GIT_PROMPT_LEADING_SPACE=0
# The end of the git prompt is set to sequence that was removed from PS1.
GIT_PROMPT_END="$ "
# Load the git prompt
source ~/dotfiles/bash-git-prompt/gitprompt.sh

# Git listing of branches by date
alias glist='for ref in $(git for-each-ref --sort=-committerdate --format="%(refname)" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:"%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n" | cat ; done | awk '"'! a["'$0'"]++'"

# grep aliases
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Don't put duplicate lines in the history.
HISTCONTROL=ignoredups

# Append and combine history from multiple bash sessions.
unset HISTFILESIZE
export HISTSIZE=10000
export PROMPT_COMMAND="$PROMPT_COMMAND;history -a;"
shopt -s histappend

# Enable programmable completion features (you don't need to enable this, if it's already enabled in /etc/bash.bashrc
# and /etc/profile sources /etc/bash.bashrc).
# if ! shopt -oq posix; then
#     if [ -f /usr/share/bash-completion/bash_completion ]; then
#         . /usr/share/bash-completion/bash_completion
#     elif [ -f /etc/bash_completion ]; then
#         . /etc/bash_completion
#     elif [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
#         . /opt/local/etc/profile.d/bash_completion.sh
#     fi
# fi

# The pattern "**" used in a pathname expansion context will match all files and zero or more directories and
# subdirectories. Older shells (OS X) might not have this option.
#shopt -s globstar

# Check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Disable Ctrl-D to logout of a shell session
set -o ignoreeof

# Re-enable Ctrl-S to forward search commands in the shell
stty -ixon
